<?php

function modalidades_entity_info(){
	$modalidades_info['modalidades'] = array(
			'label' => t('Modalidades de Bolsas'),
			'controller class' => 'ModalidadesController',
			'base table' => 'modalidades',
			'uri callback' => 'modalidades_uri',
			'fieldable' => TRUE,
			'entity keys' => array(
					'id' => 'pid',
			),
			'static cache' => TRUE,
			'bundles' => array(
					'modalidades'=> array(
							'label' => 'Modalidades',
							'admin' => array(
									'path' => 'admin/structure/modalidades/manage',
									'access arguments' => array('administer modalidades'),
							),
					),
			),
			'view modes' => array(
					'tweaky' => array(
							'label' => t('Modalidades'),
							'custom settings' =>  FALSE,
					),
			)
	);

	return $modalidades_info;
}

function modalidades_delete($entity) {
	entity_get_controller('modalidades')->delete($entity);
}

class ModalidadesController extends DrupalDefaultEntityController{

	public function save($bolsas) {
		drupal_write_record('modalidades', $modalidades);
		field_attach_insert('modalidades', $modalidades);
		module_invoke_all('entity_insert', 'modalidades', $modalidades);
		return $modalidades;
	}

	public function create(){
		$modalidade = new stdClass();
		$modalidade->type 			= 'modalidades';
		$modalidade->pid 				= 0;
		$modalidade->pr 				= '';
		$modalidade->nome 			= '';
		$modalidade->valor 			= 0;
		$modalidade->vencimento = '';
		
		return $modalidade;
	}
	
	public function delete($modalidade) {
		$this->delete_multiple(array($modalidade) );
	}

	public function delete_multiple($modalidades) {
		$pdis = array();
		
		if (!empty($modalidades) ) {
			$transaction = db_transaction();
			try {
				
				foreach ($modalidades as $modalidade) {
					module_invoke_all('modalidades_delete', $modalidade);
					module_invoke_all('modalidades_delete', $modalidade, 'modalidades');
					field_attach_delete('modalidades', $modalidade);
					$basic_ids[] = $modalidade->pid;
				}
				
				// DELETE from 'modalidades' WHERE pid = $1
				db_delete('modalidades')->condition('pid', $basic_ids, 'IN')->execute();

			}
			catch (Exception $e) {
				$transaction->rollback();
				watchdog_exception('modalidades', $e);
				throw $e;
			}
			
		}
		
	}
	
}


function modalidades_uri($modalidades){
	return array('path' => 'modalidades/' . $modalidades->pid );
}

/**
 * Carrega uma modalidade
 * @param $pid é a id da modalidade
 * @return retorna a modalidade ou FALSo
 */
function modalidades_load($pid = NULL, $reset = FALSE) {	
	$pids = (isset ($pid) ? array($pid) : array());
	$modalidades = modalidades_load_multiple($pids, $reset);
	
	return $modalidades ? reset ($bolsas) : FALSE;	
}

function modalidades_load_multiple($pids = FALSE, $conditions = array(), $reset = FALSE){
	return entity_load('modalidades', $pids, $conditions, $reset);
}

function modalidades_menu(){
	
	// Carrega a info(0
	$items['modalidades'] = array(
			'title' => 'Modalidades de Bolsa',
			'page callback' => 'modalidades_info_page',
			'access callback' => TRUE,
	);
	
	$items['admin/structure/modalidades/manage'] = array(
			'title' => 'Administração de Modalidades de Bolsa',
			'description' => 'Gerencia a estrutura das Modalidades de bolsa',
			'page callback' => 'modalidades_info',
			'access arguments' => array('administer modalidades'),
	);
	
	$items['modalidades/%modalidades'] = array(
			'title callback' => 'modalidades_page_title',
			'title arguments' => array(1),
			'page callback' => 'modalidades_page_view',
			'page arguments' => array(1),
			'access arguments' => array('view modalidads'),
	);
	
	$items['modalidades/%modalidades/view'] = array(
			'title' => 'Ver Modalidade',
			'type' => MENU_DEFAULT_LOCAL_TASK,
			'weight' => -10,
	);
	
	$items['modalidades/update'] = array(
			'title' => 'Alteração de Dados',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('modalidades_form_update'),
			'access arguments' => array('administer modalidades'),
	);
	$items['modalidades/add'] = array(
			'title' => 'Cadastro de Modalidades',
			'page callback' => 'modalidades_add',
			'access arguments' => array('create bolsa'),
	);
	return $items;
}


function modalidades_info_page() {
	$content[] = array(
			'#type' => 'item',
			'#markup' => t('Listagem de Modalidades de Bolsas',
					array('!link' => l(t('here'), 'admin/structure/modalidades/manage'))
			),
	);
	$content['table'] = modalidades_list_entities();
	return $content;
}


function modalidades_list_entities() {
	$content = array();

	if (!user_access('view any bolsas entity')) {
		$content[] = array(
				'#type' => 'item',
				'#markup' => t('This user does not have permission to view bolsas entities.'),
		);
		return $content;
	}
	$entities = modalidades_load_multiple();
	if (!empty($entities)) {
		foreach ( $entities as $entity ) {
			$rows[] = array(
					'data' => array(
							'Código' => $entity->pid,
							'proR' => $entity->pr,
							'Modalidade' => l($entity->nome, 'bolsas/' . $entity->pid),
							'Valor' => $entity->valor,
							'Vencimento' => $entity->vencimento,
					),
			);
		}
		$content['entity_table'] = array(
				'#theme' => 'table',
				'#rows' => $rows,
				'#header' => array(t('Código'), t('Pró-Reitoria'),t('Modalidade'),t('Valor'),t('Vencimento'))
		);
	}
	else {
		$content[] = array(
				'#type' => 'item',
				'#markup' => t('No bolsas entities currently exist.'),
		);
	}
	return $content;
}


function modalidades_permission(){
	return array(
			'administer bolsas' =>  array(
					'title' => t('Administer bolsas'),
					'restrict access' => TRUE,
			),
			'view bolsas' => array(
					'title' => t('View bolsas'),
			)
	);
}


function modalidades_info() {
	return ('Welcome to the administration page for your Postits!');
}

function modalidades_page_title($bolsas){
	return $bolsas->pid;
}

function modalidades_page_view($bolsas, $view_mode = 'tweaky'){

	$bolsas->content = array('#view_mode' => $view_mode,);
	field_attach_prepare_view('bolsas', array($bolsas->pid => $bolsas), $view_mode);
	entity_prepare_view('bolsas', array($bolsas->pid => $bolsas));
	$bolsas->content += field_attach_view('bolsas', $bolsas, $view_mode);
	$bolsas->valor = $bolsas->valor/100;
	$bolsas->content['nome'] = array(
			'#type' => 'item',
			'#title' => t('Nome'),
			'#markup' => $bolsas->nome,
	);
	$bolsas->content['pr'] = array(
			'#type' => 'item',
			'#title' => t('Pró-Reitoria'),
			'#markup' => $bolsas->pr,
	);
	$bolsas->content['valor'] = array(
			'#type' => 'item',
			'#title' => t('Valor'),
			'#markup' => $bolsas->valor,
	);
	$bolsas->content['vencimento'] = array(
			'#type' => 'item',
			'#title' => t('Vencimento'),
			'#markup' => $bolsas->vencimento,
	);
	global $language ;
	$langcode = $language->language ;
	module_invoke_all('entity_view', $bolsas, 'bolsas', $view_mode, $langcode);
	drupal_alter(array('modalidades_add_form', 'entity_view'), $bolsas->content);
	return $bolsas->content;
}

function modalidades_add() {
	$bolsas = entity_get_controller('bolsas')->create();
	return drupal_get_form('modalidades_form', $bolsas);
}
function modalidades_form($form, &$form_state, $bolsas) {
	print_r($bolsas);
	$form['bolsas'] = array(
			'#type' => 'value',
			'#value' => $bolsas,
	);
	$form['cadastro'] = array(
			'#type' => 'fieldset',
			'#title' => t('Dados de cadastro'));
	$form['cadastro']['pr'] = array(
			'#type' => 'select',
			'#title' => t('Pró-Reitoria'),
			'#options' => array(
					'PROGEST' => t('PROGEST'),
					'PROAD' => t('PROAD'),
					'PRAE' => t('PRAE'),
					'PREG' => t('PREG'),
					'PROPLAN' => t('PROPLAN'),
					'PRPPG' => t('PRPPG'),
			),
			'#default_value' =>'PROAD',
			'#required' => TRUE,
	);

	$form['cadastro']['nome'] = array(
			'#type' => 'textfield',
			'#title' => t('Nome'),
			'#required' => TRUE,
			'#default_value' => 'Digite a modalidade da bolsa',
	);
	$form['cadastro']['valor']= array(
			'#type' => 'textfield',
			'#required' => TRUE,
			'#title' => t('Valor'),
			'#size' => 6,
			'#maxlength' => 6,
	);
	$form['vencimento'] = array(
			'#type' => 'fieldset',
			'#title' => t('Vencimento Bolsa'),
	);
	$form['vencimento']['vencimento'] = array(
			'#type' => 'select',
			'#title' => t('Meses'),
			'#options' => array(
					'1' => t('1'),
					'2' => t('2'),
					'3' => t('3'),
					'4' => t('4'),
					'5' => t('5'),
					'6' => t('6'),
					'7' => t('7'),
					'8' => t('8'),
					'9' => t('9'),
					'10' => t('10'),
					'11' => t('11'),
					'12' => t('12'),
			),
			'#default_value' =>'1',
			'#required' => TRUE,
	);
	field_attach_form('bolsas', $bolsas, $form, $form_state);

	$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Cadastrar'),
	);
	return $form;
}
function modalidades_form_validate($form, &$form_state) {
	$modalidades_submisttion = $form_state['values']['bolsas'];
	$valor = $form_state['values']['valor'];
	if(!is_numeric($valor))
		form_set_error('valor', t('Valor inválido.'));
	field_attach_form_validate('bolsas', $modalidades_submisttion, $form, $form_state);
}

function modalidades_form_submit($form, &$form_state) {
	$bolsas = $form_state['values']['bolsas'];
	$bolsas->vencimento = $form_state['values']['vencimento']['vencimento'];
	$bolsas->nome = $form_state['values']['cadastro']['nome'];
	$bolsas->valor = $form_state['values']['cadastro']['valor'] *100;
	$bolsas->pr = $form_state['values']['cadastro']['pr'];
	field_attach_submit('bolsas', $bolsas, $form, $form_state);
	$bolsas = modalidades_save($bolsas);
	$form_state['redirect'] = "bolsas/".$bolsas->pid;
}
function modalidades_save(&$bolsas) {
	return entity_get_controller('bolsas')->save($bolsas);
}





function modalidades_entry_load($entry = array()) {

	$select = db_select('bolsas', 'bolsa');
	$select->fields('bolsa');

	// Add each field and value as a condition to this query.
	foreach ($entry as $field => $value) {
		$select->condition($field, $value);
	}
	// Return the result in object format.
	return $select->execute()->fetchAll();
}

function modalidades_form_update($form, &$form_state) {
	$form = array(
			'#prefix' => '<div id="updateform">',
			'#suffix' => '</div>',
	);

	$entries = modalidades_entry_load();
	$keyed_entries = array();
	if (empty($entries)) {
		$form['no_values'] = array(
				'#value' => t("No entries exist in the table dbtng_example table."),
		);
		return $form;
	}

	foreach ($entries as $entry) {
		$options[$entry->pid] = t("@pid: @nome", array('@pid' => $entry->pid, '@nome' => $entry->nome));
		$keyed_entries[$entry->pid] = $entry;
	}
	$default_entry = !empty($form_state['values']['pid']) ? $keyed_entries[$form_state['values']['pid']] : $entries[0];

	$form_state['entries'] = $keyed_entries;

	$form['pid'] = array(
			'#type' => 'select',
			'#options' => $options,
			'#title' => t('Escolha uma modalidade de bolsa para alterar'),
			'#default_value' => $default_entry->pid,
			'#ajax' => array(
					'wrapper' => 'updateform',
					'callback' => 'modalidades_form_update_callback',
			),
	);

	$form['nome'] = array(
			'#type' => 'textfield',
			'#title' => t('Modalidade de bolsa'),
			'#size' => 15,
			'#default_value' => $default_entry->nome,
	);
	$form['valor'] = array(
			'#type' => 'textfield',
			'#title' => t('Valor'),
			'#required' => TRUE,
			'#size' => 10,
			'#default_value' => $default_entry->valor,
	);
	$form['vencimento'] = array(
			'#type' => 'select',
			'#title' => t('Vencimento da bolsa'),
			'#options' => array(
					'1' => t('1'),
					'2' => t('2'),
					'3' => t('3'),
					'4' => t('4'),
					'5' => t('5'),
					'6' => t('6'),
					'7' => t('7'),
					'8' => t('8'),
					'9' => t('9'),
					'10' => t('10'),
					'11' => t('11'),
					'12' => t('12'),
			),
			'#default_value' =>$default_entry->vencimento,
			'#required' => TRUE,
	);
	$form['pr'] = array(
			'#type' => 'select',
			'#title' => t('Pró-Reitoria'),
			'#options' => array(
					'PROGEST' => t('PROGEST'),
					'PROAD' => t('PROAD'),
					'PRAE' => t('PRAE'),
					'PREG' => t('PREG'),
					'PROPLAN' => t('PROPLAN'),
					'PRPPG' => t('PRPPG'),
			),
			'#default_value' =>$default_entry->pr,
			'#required' => TRUE,
	);

	$form['submit'] = array(
			'#type' => 'submit',
			'#value' => t('Update'),
	);
	return $form;
}

function modalidades_form_update_callback($form, $form_state) {
	$entry = $form_state['entries'][$form_state['values']['pid']];

	foreach (array('nome,vencimento,valor,pr') as $item) {
		$form[$item]['#value'] = $entry->$item;
	}
	return $form;
}

function modalidades_entry_update($entry) {
	try {
		// db_update()...->execute() returns the number of rows updated.
		$count = db_update('bolsas')
		->fields($entry)
		->condition('pid', $entry['pid'])
		->execute();
	}
	catch (Exception $e) {
		drupal_set_message(t('db_update failed. Message = %message, query= %query',
		array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
	}
	return $count;
}

function modalidades_form_update_submit($form, &$form_state) {

	// Save the submitted entry.
	$entry = array(
			'pid' => $form_state['values']['pid'],
			'nome' => $form_state['values']['nome'],
			'vencimento' => $form_state['values']['vencimento'],
			'valor' => $form_state['values']['valor'],
			'pr' => $form_state['values']['pr'],
	);
	$count = modalidades_entry_update($entry);
	drupal_set_message(t("Updated entry @entry (@count row updated)", array('@count' => $count, '@entry' => print_r($entry, TRUE))));
}